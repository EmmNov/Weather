import 'package:equatable/equatable.dart';
import 'package:json_annotation/json_annotation.dart';

part 'weather.g.dart';

@JsonSerializable()
class Weather extends Equatable {
  const Weather({
    required this.location,
    required this.temperature,
    required this.windspeed,
    required this.condition,
    required this.humidity,
    required this.pop,
  });

  factory Weather.fromJson(Map<String, dynamic> json) =>
      _$WeatherFromJson(json);

  Map<String, dynamic> toJson() => _$WeatherToJson(this);

  final String location;
  final double temperature;
  final double windspeed;
  final WeatherCondition condition;
  final int humidity;
  final double pop;

  @override
  List<Object> get props => [
        location,
        temperature,
        windspeed,
        condition,
        humidity,
        pop,
      ];
}

enum WeatherCondition {
  clear,
  mostlyClear,
  rainy,
  heavyRain,
  thunderstorm,
  thunderstormWithHail,
  cloudy,
  partlyCloudy,
  snowy,
  unknown,
}


// GENERATED CODE - DO NOT MODIFY BY HAND

part of 'weather.dart';

// **************************************************************************
// JsonSerializableGenerator
// **************************************************************************

Weather _$WeatherFromJson(Map<String, dynamic> json) => $checkedCreate(
      'Weather',
      json,
      ($checkedConvert) {
        final val = Weather(
          location: $checkedConvert('location', (v) => v as String),
          temperature:
              $checkedConvert('temperature', (v) => (v as num).toDouble()),
          windspeed: $checkedConvert('windspeed', (v) => (v as num).toDouble()),
          condition: $checkedConvert(
              'condition', (v) => $enumDecode(_$WeatherConditionEnumMap, v)),
          humidity: $checkedConvert('humidity', (v) => v as int),
          pop: $checkedConvert('pop', (v) => (v as num).toDouble()),
        );
        return val;
      },
    );

Map<String, dynamic> _$WeatherToJson(Weather instance) => <String, dynamic>{
      'location': instance.location,
      'temperature': instance.temperature,
      'windspeed': instance.windspeed,
      'condition': _$WeatherConditionEnumMap[instance.condition]!,
      'humidity': instance.humidity,
      'pop': instance.pop,
    };

const _$WeatherConditionEnumMap = {
  WeatherCondition.clear: 'clear',
  WeatherCondition.mostlyClear: 'mostlyClear',
  WeatherCondition.rainy: 'rainy',
  WeatherCondition.heavyRain: 'heavyRain',
  WeatherCondition.thunderstorm: 'thunderstorm',
  WeatherCondition.thunderstormWithHail: 'thunderstormWithHail',
  WeatherCondition.cloudy: 'cloudy',
  WeatherCondition.partlyCloudy: 'partlyCloudy',
  WeatherCondition.snowy: 'snowy',
  WeatherCondition.unknown: 'unknown',
};
